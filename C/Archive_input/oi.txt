Critical systems are these whose failure or malfunction
may result in high economic losses, damage to the
environment or loss of human life [SOM 07]. Systems
building by people, to be used by people, management by people with people informations and with high
complexity, naturally represent a critical system. In the
”primitive” Software Engineering, early for over thirty
years, it was not common to deal with critical systems
in developing computer systems. A simple way to check
this is by reviewing the content of the basic texts of
Software Engineering and Systems Engineering. In the
last two decades, however, increasingly has considered
the issue of critical systems more deeply in professional
journals and inclusion in textbooks chapters dealing
with critical systems, safety engineering, reliability engineering, engineering protection, socio-technical systems,
risk and cyber risk, risk management, security and
auditing, security policy, security engineering software,
etc.
With the arrival of the Internet and the rapid growth of
information technology, computer systems have become
critical systems, mainly because they contain sensitive
information from people (personal information form,
databases, emails, passwords, etc.). In this context, the
concept of security, first was implemented in the maintenance process when the system was already operating.
After, has to be considered in the intermediate stages of
the development process (design and coding) [BAN 06].
Today, it is imperative to consider this in the early stages
of development (analysis and design). For this, the classical methodologies and recent development must adapt
and consider the concept of criticality of new computer
systems. The purpose of this paper is to contribute with
some methodological concepts in the implementation of
security properties in the early stages of the process for
developing computer systems.
The layout of the paper is as follows: Section 2
presents the related literature concerning Requirements
Engineering in Security Engineering. Section 3, presents
an overview of the Requirements Domain and Aspects.
In Section 4 a proposed methodology of requirements
elicitation. Section 5 presents examples of aspects and
requirements domains together a case study on an academic ERP, and finally the conclusion in Section 6.
